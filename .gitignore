# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

#include <iostream>
#include <vector>

using namespace std;

// Función para verificar si un número es primo
bool is_prime(int n) {
    if (n <= 1) {
        return false;
    }
    if (n == 2) {
        return true;
    }
    if (n % 2 == 0) {
        return false;
    }
    for (int i = 3; i * i <= n; i += 2) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

// Función para implementar la conjetura de Goldbach fuerte
void strong_goldbach(int n) {
    for (int i = 2; i <= n / 2; ++i) {
        if (is_prime(i) && is_prime(n - i)) {
            cout << n << " = " << i << " + " << n - i << "\n";
            return;
        }
    }
}

// Función para implementar la conjetura de Goldbach débil
void weak_goldbach(int n) {
    for (int i = 2; i <= n - 4; ++i) {
        if (is_prime(i)) {
            for (int j = i; j <= n - 2 - i; ++j) {
                if (is_prime(j) && is_prime(n - i - j)) {
                    cout << n << " = " << i << " + " << j << " + " << n - i - j << "\n";
                    return;
                }
            }
        }
    }
}

int main() {
    int n = 22222222;
    if (n % 2 == 0) {
        strong_goldbach(n);
    } else {
        weak_goldbach(n);
    }
    return 0;
}
